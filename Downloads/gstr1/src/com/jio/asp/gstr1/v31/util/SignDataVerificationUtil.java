/**
 * 
 */
package com.jio.asp.gstr1.v31.util;
import java.security.Security;
import java.security.cert.X509Certificate;
import java.util.Collection;
import java.util.Iterator;
import java.util.Scanner;

import org.apache.commons.codec.binary.Base64;
import org.bouncycastle.cert.X509CertificateHolder;
import org.bouncycastle.cert.jcajce.JcaX509CertificateConverter;
import org.bouncycastle.cms.CMSProcessableByteArray;
import org.bouncycastle.cms.CMSSignedData;
import org.bouncycastle.cms.SignerInformation;
import org.bouncycastle.cms.SignerInformationStore;
import org.bouncycastle.cms.jcajce.JcaSimpleSignerInfoVerifierBuilder;
import org.bouncycastle.jce.provider.BouncyCastleProvider;
import org.bouncycastle.util.Store;

/**
 * @author Mayur Jalora
 *
 */
public class SignDataVerificationUtil {
	
	private static final String BC = "BC";
	private static final String UTF8 = "UTF8";
	static {
		Security.addProvider(new BouncyCastleProvider());
	}
	

	/**
	 * This method takes input of base64Encoded data and base64SignedData
	 * 
	 * @param base64Data
	 *            base64SignedData
	 * @return boolean- true or false
	 * @throws Exception
	 * 
	 */
	@SuppressWarnings("rawtypes")
	public static boolean verifySign(String base64Data,
			String base64SignedData) throws Exception {
		Security.addProvider(new BouncyCastleProvider());
		boolean verifiedStatus = false;
		CMSSignedData cmsSignedData = null;
		try {
			byte[] signedBytes = Base64
					.decodeBase64(base64SignedData.getBytes(UTF8));
			cmsSignedData = new CMSSignedData(
					new CMSProcessableByteArray(base64Data.getBytes(UTF8)),
					signedBytes);
			Store certStore = cmsSignedData.getCertificates();
			SignerInformationStore signers = cmsSignedData.getSignerInfos();
			Iterator signersIterator = signers.getSigners().iterator();
			while (signersIterator.hasNext()) {
				SignerInformation signer = (SignerInformation) signersIterator
						.next();
				Collection certCollection = certStore
						.getMatches(signer.getSID());
				Iterator certIt = certCollection.iterator();
				X509CertificateHolder certHolder = (X509CertificateHolder) certIt
						.next();
				X509Certificate x509Certificate = new JcaX509CertificateConverter()
						.setProvider(BC).getCertificate(certHolder);
				verifiedStatus = signer
						.verify(new JcaSimpleSignerInfoVerifierBuilder()
								.setProvider(BC).build(x509Certificate));
			}
		} catch (Exception e) {
			e.printStackTrace();
			throw e;
		} 
		return verifiedStatus;
	}


	//test data
//	public static void main(String args[]){
//		boolean isSigned=false;
//	try {
//	//String base64EncodedData="ew0KICAicmdkdGxzIjogew0KICAgICJhcGx0eSI6ICJBUExSRyIsDQogICAgImFwbHN0IjogIkFQUFIiLA0KICAgICJzdGNkIjogIjA4Ig0KICB9LA0KICAiYXJuIjogIkFBMDgwMzE3MDAwMDM2USIsDQogICJvcmlnaGFzaCI6ICI2ZjNkNGM5ODIwYWQ1MzQ5N2JjZDcwNmI5ZWZlZGNkZGNhOWYyMDc4NTM5OTUxYzk4NDdmNzcxZGZkYzQ4OGIwIiwNCiAgInRvZHRscyI6IHsNCiAgICAidG9ubSI6ICJBQ0VTIFRlc3QyODMiLA0KICAgICJ0b2RnIjogIkpvaW50IENvbW1pc3Npb25lciIsDQogICAgInBsIjogIk11bWJhaSIsDQogICAgImR0IjogIjE3LTA2LTIwMTciDQogIH0NCn0=";
//	// String dscSignedData="MIAGCSqGSIb3DQEHAqCAMIACAQExCzAJBgUrDgMCGgUAMIAGCSqGSIb3DQEHAaCAJIAEggG4ZXcwS0lDQWljbWRrZEd4eklqb2dldzBLSUNBZ0lDSmhjR3gwZVNJNklDSkJVRXhTUnlJc0RRb2dJQ0FnSW1Gd2JITjBJam9nSWtGUVVGSWlMQTBLSUNBZ0lDSnpkR05rSWpvZ0lqQTRJZzBLSUNCOUxBMEtJQ0FpWVhKdUlqb2dJa0ZCTURnd016RTNNREF3TURNMlVTSXNEUW9nSUNKdmNtbG5hR0Z6YUNJNklDSTJaak5rTkdNNU9ESXdZV1ExTXpRNU4ySmpaRGN3Tm1JNVpXWmxaR05rWkdOaE9XWXlNRGM0TlRNNU9UVXhZems0TkRkbU56Y3haR1prWXpRNE9HSXdJaXdOQ2lBZ0luUnZaSFJzY3lJNklIc05DaUFnSUNBaWRHOXViU0k2SUNKQlEwVlRJRlJsYzNReU9ETWlMQTBLSUNBZ0lDSjBiMlJuSWpvZ0lrcHZhVzUwSUVOdmJXMXBjM05wYjI1bGNpSXNEUW9nSUNBZ0luQnNJam9nSWsxMWJXSmhhU0lzRFFvZ0lDQWdJbVIwSWpvZ0lqRTNMVEEyTFRJd01UY2lEUW9nSUgwTkNuMD0AAAAAAACggDCCBREwggP5oAMCAQICBHc1mOowDQYJKoZIhvcNAQELBQAwgYMxCzAJBgNVBAYTAklOMRgwFgYDVQQKEw9lTXVkaHJhIExpbWl0ZWQxHTAbBgNVBAsTFENlcnRpZnlpbmcgQXV0aG9yaXR5MTswOQYDVQQDEzJlLU11ZGhyYSBTdWIgQ0EgZm9yIENsYXNzIDIgR29sZCBPcmdhbmlzYXRpb24gMjAxNDAeFw0xNjA5MTIwNzQyNTZaFw0xODA5MTIwNzQyNTZaMIGfMQswCQYDVQQGEwJJTjENMAsGA1UECgwEdGVzdDENMAsGA1UECwwEdGVzdDETMBEGA1UEAwwKQUFHRlQwODUzTDFJMEcGA1UEBRNANmUyYzJlNTAwOTVkZjM4NDYzZjE4ZDFhNTJhNjkxZDcxMzNlZTA3N2I0ZTE1MjBmOTE2MmYyOTYwZjA3YTlhMjESMBAGA1UECAwJa2FybmF0YWthMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAuSXnKZdNPXKPgaze7c20vhbXXfz46RB0d-Ks_SVp03iXLXLAaHxRWVX12IOJlOTRPBjw8n3Ij363fsPqH2gm10sAN3Srn0XxEMQA5icn2X4ty40nRVLF_sMCDhLA1N9MVZsjW8SM25p86Q5hn6IgtnKhAOg0uc5omYrddrskfs0UIOzHaHuxW4S9K9rI85GfPMljzZsMvBbEKJDgiuXhbFBtDqixJtJjJsnv-krCG0HU_05TXo6o0L_VXf3RH79HPYxjIZ6BeQO4mnZfQeqb65LP31zCGg2WG_l_9yEvftQUVugB781ZwIzq8DBxaiMSb_ZrdLLgnsYM509Sf_KNYwIDAQABo4IBbTCCAWkwHQYDVR0lBBYwFAYIKwYBBQUHAwQGCCsGAQUFBwMCMB0GA1UdDgQWBBT92ejUMzhyGMgr36TzWFBxY0O-jjByBgNVHSAEazBpMC0GBmCCZGQCAjAjMCEGCCsGAQUFBwICMBUaE0NsYXNzIDIgQ2VydGlmaWNhdGUwOAYHYIJkZAEIAjAtMCsGCCsGAQUFBwIBFh9odHRwOi8vd3d3LmUtbXVkaHJhLmNvbS90ZXN0Y3BzMBMGA1UdIwQMMAqACEXIuPdh46C5ME4GCCsGAQUFBwEBBEIwQDA-BggrBgEFBQcwAoYyaHR0cDovLzExNS4yNDYuOTkuMTMzL3JlcG9zaXRvcnkvY2FjZXJ0cy9jMm9yZy5jcnQwDgYDVR0PAQH_BAQDAgbAMEAGA1UdHwQ5MDcwNaAzoDGGL2h0dHA6Ly8xMTkuODIuMTI1LjExNC9yZXBvc2l0b3J5L2NybHMvYzJvcmcuY3JsMA0GCSqGSIb3DQEBCwUAA4IBAQBxIrYfUYGAGKb5_El4QdT-FipebwW9vlHpIJbNogfmw4OHQpc5teAtuHkzacLEOelS2_4qLzs1r_YHDkGwFq4s7M4jgAbX6Ly3_NE3Tcte5BpfBumwNrJc6TIgFlWDbKmYGD2nyeMZYuRiMQ8fLDNggflC7IxxtbtM_PnG9wmLUgnHU0tYBHbSH9n17skAWjaLkvaw3j6NlorfeUSqohijnPknCdNsQD7-M3M59EoSVlafQZTs1ypSJoX9s5jOwEGMYIAfwZAFhRe2RFD3tAqLXusSoLBAztd96rRkfuuvuoLZVpg6VPV2mldGaE8u1US6k09U1i__UU2kJusonnSIAAAxggITMIICDwIBATCBjDCBgzELMAkGA1UEBhMCSU4xGDAWBgNVBAoTD2VNdWRocmEgTGltaXRlZDEdMBsGA1UECxMUQ2VydGlmeWluZyBBdXRob3JpdHkxOzA5BgNVBAMTMmUtTXVkaHJhIFN1YiBDQSBmb3IgQ2xhc3MgMiBHb2xkIE9yZ2FuaXNhdGlvbiAyMDE0AgR3NZjqMAkGBSsOAwIaBQCgXTAYBgkqhkiG9w0BCQMxCwYJKoZIhvcNAQcBMBwGCSqGSIb3DQEJBTEPFw0xNzA2MjAxMDQ5NDZaMCMGCSqGSIb3DQEJBDEWBBQx5bbYzvt3OfZnZdVCWfVEJec0JDANBgkqhkiG9w0BAQEFAASCAQCwm_McF9vtyNaVnBlSc-eFtRRTFAVtibWduhMEYS3ajvvwCP2BIWNQld-JE7ShQOcI2n1uy9IbYjc-wbuKubsz12LsX8cDfemKiw9nmaKeGaw6nvkYr4UVNqUUEfcoiqbZESIVYCa60ziByiID_FkNzICrluH-rgwPH2cQX5Ve9c_oqRLplsLLNezn9fGodqeYTqacHkOn5nheA62-LF1dzKbCsOA31y3DShTpvy9pmP3alvfSZ7WZmqfs9mU6j69_n0Bnsf-8Ho758WCiKxpJIW1MhZIPdXOYy4LZoMB7cMkml3-mssv2fpHim1LUzHavGK3dTq2qkTQ8SJxFV4b5AAAAAAAA";
//	
//		String dscSignedData ="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";
//		 String base64EncodedData= "8f9e0f909cf3b9722d7d5cc35fac7e399222febcebbccdee4dceced898e119dd";
//				 
//		 isSigned = SignDataVerificationUtil.verifySign(base64EncodedData, dscSignedData);
//		System.out.println("issigned:"+isSigned);
//	} catch (Exception e) {
//		e.printStackTrace();
//	} 
//	}	
	
	
//	//test data input in console
//	public static void main(String args[]){
//		boolean isSigned=false;
//	try {
//		
//		String dscSignedData ="";
//		String base64EncodedData= "";
//
//		Scanner sc = new Scanner(System.in);
//		System.out.println("-------------------");
//		System.out.println("Enter Signdata: ");
//	      dscSignedData = sc.next();
//	      System.out.println("Enter Base64/hash of data: ");
//		 base64EncodedData = sc.next();
//		 
//		isSigned = SignDataVerificationUtil.verifySign(base64EncodedData, dscSignedData);
//		System.out.println("Hashed: " + isSigned);
//		
//		
//		
//	} catch (Exception e) {
//		e.printStackTrace();
//	} 
//	}	
//	
//	
//	
//	
}
